3.하상준
#8026

3.이성언 — 2022.04.22.
케이크 받는 꿈꿨는데 강의실이 같았습니다
박지호 강사 — 2022.04.22.
첨부 파일 형식: acrobat
21_Static.pdf
1.73 MB
박지호 강사 — 2022.04.22.
첨부 파일 형식: acrobat
22_Media.pdf
1.23 MB
박지호 강사 — 2022.04.22.
@everyone 
if request.FILES["image"]: ->  if request.FILES.get("image"):
landing/views.py 수정해주세요 혼동을 드려 죄송합니다
3. 이준기 — 2022.04.22.
이미지
멋쟁이
3.이준석 — 2022.04.22.
이미지
이미지
3.송혜원 — 2022.04.22.
이미지
이미지
3. 하승완 — 2022.04.22.
오늘의 주인공
3.이준석 — 2022.04.22.
부럽다
본투비 씬 스틸러 건희
3. 하승완 — 2022.04.22.
ㅋㅋㅋㅋㅋ
3. 손현원 — 2022.04.22.
https://www.instagram.com/p/CcklfVZM9LQ/?igshid=YmMyMTA2M2Y=

_humorpedia
와 설명이 쏙쏙! 컴잘알님 감사합니다........
.
.
.
출처 : 에브리타임
Likes
5228
이미지
이미지
이미지
이미지

Instagram
똑소 썰마케팅 아이디어로 공유해유
박지호 강사 — 2022.04.25.
첨부 파일 형식: acrobat
23_Authentication_1.pdf
1.05 MB
                        <li class="nav-item"><a class="nav-link {% block active_home %}{% endblock %}" href="{% url 'boot:home' %}">Home</a></li>
                        <li class="nav-item"><a class="nav-link {% block active_about %}{% endblock %}" href="{% url 'boot:about' %}">About</a></li>
                        <li class="nav-item"><a class="nav-link {% block active_contact %}{% endblock %}" href="{% url 'boot:contact' %}">Contact</a></li>
                        <li class="nav-item"><a class="nav-link {% block active_blog %}{% endblock %}" aria-current="page" href="{% url 'boot:blog' %}">Blog</a></li>
{% block active_about %}active{% endblock %} , {% block active_blog %}active{% endblock %} , {% block active_contact %}active{% endblock %} , {% block active_home %}active{% endblock %} 
이소현 매니저 (3회차) — 2022.04.25.
3회차 오늘의 임시 팀입니다-💗
이미지
3.송수환 — 2022.04.25.
이미지
3.서지훤 — 2022.04.25.
선착순으로 올려야하나요?
빙고에 진심이라
룰을@정확히 알려주시기 바랍니다^^
이소현 매니저 (3회차) — 2022.04.25.
가장 많은 빙고를 하신 팀이 승리입니다☺️
박지호 강사 — 2022.04.25.
{% extends "base.html" %}
{% block title %}Login{% endblock %}

{% block main %}
<main class="flex-shrink-0">
    <!-- Page content-->
확장
login.html
4KB
{% extends "base.html" %}
{% block title %}Sign Up{% endblock %}

{% block main %}
<main class="flex-shrink-0">
    <!-- Page content-->
확장
sign-up.html
4KB
    path("login/", views.login),
    path("sign-up/", views.sign_up),
박지호 강사 — 2022.04.25.
    if request.method == "POST":
        username = request.POST.get("username")
        password = request.POST.get("password")
        password_check = request.POST.get("password_check")
        if username is not None and \
            password is not None and \
            password == password_check:
            
            new_user = User.objects.create_user(
                username=username,
                password=password,
            )
            
            return redirect("boot:home")

    return render(request, "boot/sign-up.html")
박지호 강사 — 2022.04.25.
첨부 파일 형식: acrobat
23_Authentication_2.pdf
727.93 KB
3. 이진표 — 2022.04.25.
뮤직방에 저 리스트대로 각자 들을수 있는건줄 알았는데 통합된거였네요.. 아까 맘대로 스킵해서 죄송함다 ㅠㅠ 즐거운밤 보내세요 🌙
박지호 강사 — 어제 오전 10:01
이미지
박지호 강사 — 어제 오전 10:11
첨부 파일 형식: acrobat
24_social_login.pdf
1.50 MB
박지호 강사 — 어제 오전 10:55
https://nid.naver.com/oauth2.0/authorize?client_id={클라이언트 아이디}&response_type=code&redirect_uri={개발자 센터에 등록한 콜백 URL(URL 인코딩)}&state={상태 토큰}
https://nid.naver.com/oauth2.0/token?client_id={클라이언트 아이디}&client_secret={클라이언트 시크릿}&grant_type=authorization_code&state={상태 토큰}&code={인증 코드}
박지호 강사 — 어제 오전 11:02
http://localhost:8000/accounts/naver/login/callback/
3. 이준기 — 어제 오전 11:06
이미지
3. 이진표 — 어제 오후 12:48
저희 제시간에 돌아가고 있습니다 🙂
박지호 강사 — 어제 오후 1:29
https://nid.naver.com/oauth2.0/token?grant_type=delete&client_id={클라이언트 아이디}&client_secret={클라이언트 시크릿}&access_token={사용 중단할 Access Token}&service_provider=NAVER
박지호 강사 — 어제 오후 2:18
https://django-allauth.readthedocs.io/en/latest/providers.html
첨부 파일 형식: acrobat
25_Model_Relations.pdf
936.40 KB
https://dbdiagram.io/
A Free Database Designer for Developers and Analysts
Quick and simple free tool to help you draw your database relationship diagrams and flow quickly using just keyboard
A Free Database Designer for Developers and Analysts
박지호 강사 — 어제 오후 7:03
AWS관련 자료를 노션에 업데이트 해두었습니다~
3.이준석 — 어제 오후 7:04
감사합니다~
3.김재광 — 어제 오후 7:09
아 맞다 회원가입!
3.송혜원 — 어제 오후 7:14
감사합니다 좋은 저녁되세요👍
박지호 강사 — 오늘 오전 10:10
첨부 파일 형식: acrobat
27_AWS_1.pdf
4.87 MB
박지호 강사 — 오늘 오전 10:56
첨부 파일 형식: acrobat
28_AWS_2.pdf
1.71 MB
박지호 강사 — 오늘 오전 11:24
sudo apt update
sudo apt upgrade
sudo apt install python3-pip
박지호 강사 — 오늘 오전 11:48
아래 명령어 순서대로
python3 -m pip install virtualenv
python3 -m virtualenv venv_django
source venv_django/bin/activate
mkdir django_demo
cd django_demo/
pip install django
django-admin startproject django_demo .
python manage.py runserver
http://3.37.61.222:8000/
박지호 강사 — 오늘 오후 2:18
cat .ssh/id_rsa.pub
# Created by https://www.toptal.com/developers/gitignore/api/django,visualstudiocode,python
# Edit at https://www.toptal.com/developers/gitignore?templates=django,visualstudiocode,python

### Django ###
*.log
*.pot
*.pyc
__pycache__/
local_settings.py
db.sqlite3
db.sqlite3-journal
media

# If your build process includes running collectstatic, then you probably don't need or want to include staticfiles/
# in your Git repository. Update and uncomment the following line accordingly.
# <django-project-name>/staticfiles/

### Django.Python Stack ###
# Byte-compiled / optimized / DLL files
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo

# Django stuff:

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version
... (184줄 남음)
접기
message.txt
7KB
﻿
# Created by https://www.toptal.com/developers/gitignore/api/django,visualstudiocode,python
# Edit at https://www.toptal.com/developers/gitignore?templates=django,visualstudiocode,python

### Django ###
*.log
*.pot
*.pyc
__pycache__/
local_settings.py
db.sqlite3
db.sqlite3-journal
media

# If your build process includes running collectstatic, then you probably don't need or want to include staticfiles/
# in your Git repository. Update and uncomment the following line accordingly.
# <django-project-name>/staticfiles/

### Django.Python Stack ###
# Byte-compiled / optimized / DLL files
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo

# Django stuff:

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

### Python ###
# Byte-compiled / optimized / DLL files

# C extensions

# Distribution / packaging

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.

# Installer logs

# Unit test / coverage reports

# Translations

# Django stuff:

# Flask stuff:

# Scrapy stuff:

# Sphinx documentation

# PyBuilder

# Jupyter Notebook

# IPython

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm

# Celery stuff

# SageMath parsed files

# Environments

# Spyder project settings

# Rope project settings

# mkdocs documentation

# mypy

# Pyre type checker

# pytype static type analyzer

# Cython debug symbols

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.

### VisualStudioCode ###
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

### VisualStudioCode Patch ###
# Ignore all local history of files
.history
.ionide

# Support for Project snippet scope
.vscode/*.code-snippets

# Ignore code-workspaces
*.code-workspace

# End of https://www.toptal.com/developers/gitignore/api/django,visualstudiocode,python

_media
static_root

